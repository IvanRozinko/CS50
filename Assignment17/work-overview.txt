1.Контейнеры прошлой недели дорабатывались. Были написаны итераторы для MyArrayList и LinkedList. Немного изменил реализацию класса MyStack.
2.При переводе Хаффмана на MyHashMap поменял реализацию hashcode(), и метода getIndex() - иногда возвращал отрицательное значение индекса массива. При обращении к внутреннему
 классу Entry y MyHashMap приходится явно приводить типы объектов, не смог разобраться как от этого уйти. Переход на свою приоритетную очередь прошел легче.
3.Скорость работы архиватора после перехода на свои контейнеры не поменялась. При работе с текстовым файлом (английский словарь) более 1 Мб время сжатия/расжатия осталось прежним.
В остальных заданиях существенной потери производительности я не обнаружил.
4.Приоритетная очередь построена на бинарной куче основе которого массив объектов.
5.В MyHashMap в каждом элементе на полях хранится список. Если индекс нового элемента совпадает с уже добавленым ранее, новый элемент сравнивается с каждым элементом 
указанного списка и : 
			если их ключи равны а значения нет, - тогда значение элемента из списка перезаписывается на новое
			если ключи не равны - тогда новый элемент добавляется в конец списка
6.Думаю работа не идеальна. Но учитывая критерии оценивания на p2p пятерку можно ставить)). В работе есть поддержка шаблонов (дженериков), есть возможность применения
цикла  for (т.к. они имплементят Iterable) и приоритетная очередь построена на бинарной куче.
 